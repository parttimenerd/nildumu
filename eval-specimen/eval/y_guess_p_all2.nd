/* adopted from the ApproxFlow repo, which in turn is based on */
/* F. Biondi, A. Legay, and J. Quilbeuf, "Comparative analysis of leakage tools on scalable case studies," */

bit_width 32;

/* N is the total number of houses */
int N;

/* We consider different sizes of houses. S, M and L indicate the number of houses of each size. */
int S;
int M;
int L;

/* each size correspond to a different level of consumption */
int  small_consumption;
int medium_consumption;
int  large_consumption;

/* the observable is the global consumption of the system */
int global_consumption;

/* the secret is the presence */
/*h input int presence_target = 0bu{32};*/

/* e.g. case1 or case2 from the paper */
int case_value;

N=3;

/* We consider different sizes of houses. S, M and L indicate the number of houses of each size. */
S=N/3;
M=N/3;
L=N-S-M;

/* each size correspond to a different level of consumption */
small_consumption = 1 ;
medium_consumption = 3 ;
large_consumption = 5 ;

/* the observable is the global consumption of the system */
global_consumption = 0;

/* Initialize the public values */
N = 16; /*  a valid value for the test case, note in paper */
S=N/3 ;
M=N/3 ;
L=N-S-M ;
case_value = 1; /* also use case = 0 */

 if (case_value == 1) {
small_consumption = 1 ;
medium_consumption = 2 ;
large_consumption = 3 ;
 }
 else {
small_consumption = 1 ;
medium_consumption = 3 ;
large_consumption = 5 ;
 }
/* Done initializing the public values */

h input int[16] presence = 0bu{32};  /* the secret is an array of bools */

int u = 0;
while (u < length(presence)) {
    presence[u] = presence[u] & 0b001;
    u = u + 1;
}

int i  = 0;
while ( i < N ) {
 if ((presence[i]) == 1) {
   
if (i<S) {
  global_consumption = global_consumption + small_consumption ;
}
else { if (i<S+M) {
  global_consumption = global_consumption + medium_consumption ;
}
else{
  global_consumption = global_consumption + large_consumption ;
} 
}
 }
 i= i + 1;
}
l output int out = global_consumption;
